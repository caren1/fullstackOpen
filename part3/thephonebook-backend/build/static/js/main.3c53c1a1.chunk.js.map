{"version":3,"sources":["components/Input.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/person.js","components/App.js","index.js"],"names":["Input","text","onChange","value","Filter","PersonForm","onSubmit","newName","handleNameChange","newPhoneNumber","handlePhoneChange","type","Persons","persons","removePerson","map","person","key","name","number","onClick","id","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","props","useState","setPersons","setNewName","setNewPhoneNumber","showAll","setShowAll","setMessage","messageType","setMessageType","useEffect","personService","personsToShow","filter","toLowerCase","includes","handleMessage","setTimeout","event","target","preventDefault","personObject","window","confirm","personToUpdate","find","changedPerson","returnedPerson","catch","error","console","log","newPerson","concat","question","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c53c1a1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Input = ({text, onChange, value}) => {\r\n    return(\r\n        <div>\r\n          {text} <input onChange={onChange} value={value} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport Input from './Input'\r\n\r\nconst Filter = ( {onChange, value} ) => {\r\n\r\n    return (\r\n        <div>\r\n             <Input text={'Filter shown with:'} onChange={onChange} value={value}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nimport Input from './Input'\r\n\r\nconst PersonForm = ({onSubmit, newName, handleNameChange, newPhoneNumber, handlePhoneChange}) => {\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n        <Input text={'Name:'} onChange={handleNameChange} value={newName}/>\r\n        <Input text={'Phone number:'} onChange={handlePhoneChange} value={newPhoneNumber}/>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm ","import React from 'react';\r\n\r\nconst Persons = ({ persons, removePerson }) => {\r\n    return (\r\n        <ul>\r\n            {persons.map(person => \r\n              <li key={person.name}>\r\n               {person.name}, {person.number}\r\n               <button onClick={() => removePerson(person.id, person.name)}>delete</button>\r\n              </li>\r\n            )}\r\n         </ul>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\n// const error = {\r\n//     color: 'red',\r\n//     background: 'lightgrey',\r\n//     fontSize: 20,\r\n//     borderStyle: 'solid',\r\n//     borderRadius: 5,\r\n//     padding: 10,\r\n//     marginBottom: 10\r\n// }\r\n\r\n// const success = {\r\n//     color: 'green',\r\n//     background: 'lightgrey',\r\n//     fontSize: 20,\r\n//     borderStyle: 'solid',\r\n//     borderRadius: 5,\r\n//     padding: 10,\r\n//     marginBottom: 10\r\n// }\r\n\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if(message === null){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={type}>\r\n            {message}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\r\n\r\nimport Filter from './Filter'\r\nimport PersonForm from './PersonForm'\r\nimport Persons from './Persons'\r\nimport Notification from './Notification'\r\n\r\nimport personService from '../services/person'\r\n\r\nconst App = ({ props }) => {\r\n\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newPhoneNumber, setNewPhoneNumber ] = useState('')\r\n  const [ showAll, setShowAll ] = useState('')\r\n  const [ message, setMessage ] = useState('')\r\n  const [ messageType, setMessageType ] = useState('')\r\n\r\n  useEffect(() => {\r\n    personService\r\n    .getAll()\r\n    .then(persons => {\r\n      setPersons(persons)\r\n    })\r\n  }, [])\r\n  \r\n  let personsToShow = showAll ? persons.filter(person => person.name.toLowerCase().includes(showAll.toLowerCase())) : persons\r\n\r\n  const handleFilterChange = (event) => {\r\n    setShowAll(event.target.value);\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n      setNewName(event.target.value);\r\n  }\r\n\r\n  const handlePhoneChange = (event) => {\r\n    setNewPhoneNumber(event.target.value);\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n      event.preventDefault();\r\n      const personObject = { name: newName, number: newPhoneNumber}\r\n      const personNames = persons.map(person => person.name);\r\n\r\n      if(!personNames.includes(personObject.name)){\r\n        personService\r\n        .create(personObject)\r\n        .then(newPerson => {\r\n          setPersons(persons.concat(newPerson))\r\n          handleMessage(`Successfully added ${newPerson.name}`, 'success')\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          handleMessage(`Could not create: ${error}`, 'error')\r\n        })\r\n\r\n      } else {\r\n        const decision = window.confirm(`${personObject.name} is already existing in the phone book. Do you want to replace the old number with a new one?`);\r\n        if(decision){\r\n          const personToUpdate = persons.find(person => person.name === personObject.name)\r\n          const changedPerson = {...personToUpdate, number: personObject.number}\r\n\r\n          personService\r\n          .update(personToUpdate.id, changedPerson)\r\n          .then(returnedPerson => {\r\n            setPersons(persons.map(person => person.id !== personToUpdate.id ? person : returnedPerson))\r\n            handleMessage(`Successfully changed the ${returnedPerson.name}'s phone number`, 'success')\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            handleMessage(`Information of ${changedPerson.name} has already been removed from server`, 'error')\r\n          })\r\n        }\r\n      }\r\n      setNewName('');\r\n      setNewPhoneNumber('')\r\n  }\r\n\r\n  const removePerson = (id, name) => {\r\n    const question = `Do you really want to delete the ${name} from the phonebook?`\r\n    const decision = window.confirm(question);\r\n    if(decision) {\r\n      personService\r\n      .remove(id)\r\n      .then(response => {\r\n        setPersons(persons.filter(person => person.id !== id))\r\n        handleMessage(`Successfully deleted ${name}`, 'success') \r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        handleMessage(`Information of ${name} has already been removed from server`, 'error')\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleMessage = (message, type) => {\r\n    setMessage(message)\r\n    setMessageType(type)\r\n\r\n    setTimeout(() => {\r\n      setMessage(null)\r\n      setMessageType('')\r\n    }, 5000)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} type={messageType}/>\r\n      <Filter onChange={handleFilterChange} value={showAll} />\r\n      <h3>Add a new</h3>\r\n\r\n      <PersonForm \r\n      onSubmit={addPerson}\r\n      newName={newName}\r\n      handleNameChange={handleNameChange}\r\n      newPhoneNumber={newPhoneNumber}\r\n      handlePhoneChange={handlePhoneChange}\r\n      \r\n      />\r\n\r\n      <h3>Persons:</h3>\r\n      <Persons persons={personsToShow} removePerson={removePerson}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}